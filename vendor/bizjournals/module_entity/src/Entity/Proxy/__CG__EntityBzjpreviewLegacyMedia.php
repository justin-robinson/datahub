<?php

namespace Entity\Proxy\__CG__\Entity\Bzjpreview;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LegacyMedia extends \Entity\Bzjpreview\LegacyMedia implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'media_id', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'location_url', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'filename', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'media_type', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'mime_type', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'rev_number', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_height', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_width', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_caption', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_copyright', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_alt_text', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'content', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'filesize', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'created_at', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'PageLegacyMediaMap'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'media_id', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'location_url', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'filename', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'media_type', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'mime_type', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'rev_number', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_height', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_width', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_caption', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_copyright', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'default_alt_text', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'content', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'filesize', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'created_at', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Bzjpreview\\LegacyMedia' . "\0" . 'PageLegacyMediaMap'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LegacyMedia $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getMediaId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaId', []);

        return parent::getMediaId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocationUrl($locationUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocationUrl', [$locationUrl]);

        return parent::setLocationUrl($locationUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationUrl', []);

        return parent::getLocationUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilename($filename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilename', [$filename]);

        return parent::setFilename($filename);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilename()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilename', []);

        return parent::getFilename();
    }

    /**
     * {@inheritDoc}
     */
    public function setMediaType($mediaType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMediaType', [$mediaType]);

        return parent::setMediaType($mediaType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMediaType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaType', []);

        return parent::getMediaType();
    }

    /**
     * {@inheritDoc}
     */
    public function setMimeType($mimeType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMimeType', [$mimeType]);

        return parent::setMimeType($mimeType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMimeType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMimeType', []);

        return parent::getMimeType();
    }

    /**
     * {@inheritDoc}
     */
    public function setRevNumber($revNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRevNumber', [$revNumber]);

        return parent::setRevNumber($revNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getRevNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRevNumber', []);

        return parent::getRevNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultHeight($defaultHeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultHeight', [$defaultHeight]);

        return parent::setDefaultHeight($defaultHeight);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultHeight', []);

        return parent::getDefaultHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultWidth($defaultWidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultWidth', [$defaultWidth]);

        return parent::setDefaultWidth($defaultWidth);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultWidth', []);

        return parent::getDefaultWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultCaption($defaultCaption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultCaption', [$defaultCaption]);

        return parent::setDefaultCaption($defaultCaption);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultCaption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultCaption', []);

        return parent::getDefaultCaption();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultCopyright($defaultCopyright)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultCopyright', [$defaultCopyright]);

        return parent::setDefaultCopyright($defaultCopyright);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultCopyright()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultCopyright', []);

        return parent::getDefaultCopyright();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultAltText($defaultAltText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultAltText', [$defaultAltText]);

        return parent::setDefaultAltText($defaultAltText);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultAltText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultAltText', []);

        return parent::getDefaultAltText();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilesize($filesize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilesize', [$filesize]);

        return parent::setFilesize($filesize);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilesize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilesize', []);

        return parent::getFilesize();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addPageLegacyMediaMap(\Entity\Bzjpreview\PageLegacyMediaMap $pageLegacyMediaMap)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPageLegacyMediaMap', [$pageLegacyMediaMap]);

        return parent::addPageLegacyMediaMap($pageLegacyMediaMap);
    }

    /**
     * {@inheritDoc}
     */
    public function removePageLegacyMediaMap(\Entity\Bzjpreview\PageLegacyMediaMap $pageLegacyMediaMap)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePageLegacyMediaMap', [$pageLegacyMediaMap]);

        return parent::removePageLegacyMediaMap($pageLegacyMediaMap);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageLegacyMediaMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageLegacyMediaMap', []);

        return parent::getPageLegacyMediaMap();
    }

}
