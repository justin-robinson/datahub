<?php

namespace Entity\Proxy\__CG__\Entity\Bizj;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Industry extends \Entity\Bizj\Industry implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'industry_id', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'industry_code', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'industry_name', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'short_name', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'active', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'hidden', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'feed_id', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'nstein_name', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'iana_value', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'Channels', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'Topics'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'industry_id', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'industry_code', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'industry_name', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'short_name', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'active', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'hidden', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'feed_id', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'nstein_name', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'iana_value', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'Channels', '' . "\0" . 'Entity\\Bizj\\Industry' . "\0" . 'Topics'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Industry $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIndustryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndustryId', []);

        return parent::getIndustryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndustryCode($industryCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndustryCode', [$industryCode]);

        return parent::setIndustryCode($industryCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndustryCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndustryCode', []);

        return parent::getIndustryCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndustryName($industryName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndustryName', [$industryName]);

        return parent::setIndustryName($industryName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndustryName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndustryName', []);

        return parent::getIndustryName();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortName($shortName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortName', [$shortName]);

        return parent::setShortName($shortName);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortName', []);

        return parent::getShortName();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setHidden($hidden)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHidden', [$hidden]);

        return parent::setHidden($hidden);
    }

    /**
     * {@inheritDoc}
     */
    public function getHidden()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHidden', []);

        return parent::getHidden();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeedId($feedId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeedId', [$feedId]);

        return parent::setFeedId($feedId);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeedId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeedId', []);

        return parent::getFeedId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNsteinName($nsteinName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNsteinName', [$nsteinName]);

        return parent::setNsteinName($nsteinName);
    }

    /**
     * {@inheritDoc}
     */
    public function getNsteinName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNsteinName', []);

        return parent::getNsteinName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIanaValue($ianaValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIanaValue', [$ianaValue]);

        return parent::setIanaValue($ianaValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getIanaValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIanaValue', []);

        return parent::getIanaValue();
    }

    /**
     * {@inheritDoc}
     */
    public function addChannel(\Entity\Bizj\Channel $channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChannel', [$channel]);

        return parent::addChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChannel(\Entity\Bizj\Channel $channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChannel', [$channel]);

        return parent::removeChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannels', []);

        return parent::getChannels();
    }

    /**
     * {@inheritDoc}
     */
    public function addTopic(\Entity\Bizj\Topic $topic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTopic', [$topic]);

        return parent::addTopic($topic);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTopic(\Entity\Bizj\Topic $topic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTopic', [$topic]);

        return parent::removeTopic($topic);
    }

    /**
     * {@inheritDoc}
     */
    public function getTopics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopics', []);

        return parent::getTopics();
    }

}
