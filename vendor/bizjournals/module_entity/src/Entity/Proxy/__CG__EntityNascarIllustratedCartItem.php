<?php

namespace Entity\Proxy\__CG__\Entity\NascarIllustrated;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CartItem extends \Entity\NascarIllustrated\CartItem implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'cart_id', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'item_id', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'product_name', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'price', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'quantity', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'added_time', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'tax', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'parent_item_id', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'metadata', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'created_at', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'updated_at', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'Cart', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'Product'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'cart_id', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'item_id', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'product_name', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'price', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'quantity', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'added_time', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'tax', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'parent_item_id', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'metadata', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'created_at', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'updated_at', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'Cart', '' . "\0" . 'Entity\\NascarIllustrated\\CartItem' . "\0" . 'Product'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CartItem $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCartId($cartId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCartId', [$cartId]);

        return parent::setCartId($cartId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCartId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCartId', []);

        return parent::getCartId();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemId($itemId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemId', [$itemId]);

        return parent::setItemId($itemId);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemId', []);

        return parent::getItemId();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductName($productName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductName', [$productName]);

        return parent::setProductName($productName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductName', []);

        return parent::getProductName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddedTime($addedTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddedTime', [$addedTime]);

        return parent::setAddedTime($addedTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddedTime', []);

        return parent::getAddedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setTax($tax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTax', [$tax]);

        return parent::setTax($tax);
    }

    /**
     * {@inheritDoc}
     */
    public function getTax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTax', []);

        return parent::getTax();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentItemId($parentItemId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentItemId', [$parentItemId]);

        return parent::setParentItemId($parentItemId);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentItemId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentItemId', []);

        return parent::getParentItemId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetadata($metadata)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetadata', [$metadata]);

        return parent::setMetadata($metadata);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadata()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetadata', []);

        return parent::getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCart(\Entity\NascarIllustrated\Cart $cart = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCart', [$cart]);

        return parent::setCart($cart);
    }

    /**
     * {@inheritDoc}
     */
    public function getCart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCart', []);

        return parent::getCart();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(\Entity\NascarIllustrated\Product $product = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$product]);

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

}
