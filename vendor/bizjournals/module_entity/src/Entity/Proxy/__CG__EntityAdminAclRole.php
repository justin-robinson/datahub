<?php

namespace Entity\Proxy\__CG__\Entity\Admin;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AclRole extends \Entity\Admin\AclRole implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'acl_role_id', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'role_name', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'description', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'created_at', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'AclUserRole', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'AclRolePrivilege');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'acl_role_id', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'role_name', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'description', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'created_at', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'AclUserRole', '' . "\0" . 'Entity\\Admin\\AclRole' . "\0" . 'AclRolePrivilege');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AclRole $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAclRoleId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAclRoleId', array());

        return parent::getAclRoleId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoleName($roleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoleName', array($roleName));

        return parent::setRoleName($roleName);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoleName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoleName', array());

        return parent::getRoleName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addAclUserRole(\Entity\Admin\AclUserRole $aclUserRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAclUserRole', array($aclUserRole));

        return parent::addAclUserRole($aclUserRole);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAclUserRole(\Entity\Admin\AclUserRole $aclUserRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAclUserRole', array($aclUserRole));

        return parent::removeAclUserRole($aclUserRole);
    }

    /**
     * {@inheritDoc}
     */
    public function getAclUserRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAclUserRole', array());

        return parent::getAclUserRole();
    }

    /**
     * {@inheritDoc}
     */
    public function addAclRolePrivilege(\Entity\Admin\AclRolePrivilege $aclRolePrivilege)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAclRolePrivilege', array($aclRolePrivilege));

        return parent::addAclRolePrivilege($aclRolePrivilege);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAclRolePrivilege(\Entity\Admin\AclRolePrivilege $aclRolePrivilege)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAclRolePrivilege', array($aclRolePrivilege));

        return parent::removeAclRolePrivilege($aclRolePrivilege);
    }

    /**
     * {@inheritDoc}
     */
    public function getAclRolePrivilege()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAclRolePrivilege', array());

        return parent::getAclRolePrivilege();
    }

}
