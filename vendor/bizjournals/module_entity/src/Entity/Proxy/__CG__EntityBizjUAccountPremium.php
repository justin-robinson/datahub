<?php

namespace Entity\Proxy\__CG__\Entity\Bizj;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UAccountPremium extends \Entity\Bizj\UAccountPremium implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'premium_id', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'user_id', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'market_id', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'subscription_number', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'start_date', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'end_date', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'source', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'premium_type', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'added_by', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'modified_by', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'created_at', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'User', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'Market', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'UAccount'];
        }

        return ['__isInitialized__', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'premium_id', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'user_id', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'market_id', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'subscription_number', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'start_date', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'end_date', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'source', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'premium_type', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'added_by', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'modified_by', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'created_at', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'User', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'Market', '' . "\0" . 'Entity\\Bizj\\UAccountPremium' . "\0" . 'UAccount'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UAccountPremium $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPremiumId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPremiumId', []);

        return parent::getPremiumId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($userId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$userId]);

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarketId($marketId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarketId', [$marketId]);

        return parent::setMarketId($marketId);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarketId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarketId', []);

        return parent::getMarketId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscriptionNumber($subscriptionNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscriptionNumber', [$subscriptionNumber]);

        return parent::setSubscriptionNumber($subscriptionNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscriptionNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscriptionNumber', []);

        return parent::getSubscriptionNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$endDate]);

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setPremiumType($premiumType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPremiumType', [$premiumType]);

        return parent::setPremiumType($premiumType);
    }

    /**
     * {@inheritDoc}
     */
    public function getPremiumType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPremiumType', []);

        return parent::getPremiumType();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddedBy($addedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddedBy', [$addedBy]);

        return parent::setAddedBy($addedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddedBy', []);

        return parent::getAddedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', [$modifiedBy]);

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', []);

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Entity\Bizj\UAccount $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarket(\Entity\Bizj\Market $market = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarket', [$market]);

        return parent::setMarket($market);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarket()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarket', []);

        return parent::getMarket();
    }

    /**
     * {@inheritDoc}
     */
    public function setUAccount(\Entity\Bizj\UAccount $uAccount = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUAccount', [$uAccount]);

        return parent::setUAccount($uAccount);
    }

    /**
     * {@inheritDoc}
     */
    public function getUAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUAccount', []);

        return parent::getUAccount();
    }

}
