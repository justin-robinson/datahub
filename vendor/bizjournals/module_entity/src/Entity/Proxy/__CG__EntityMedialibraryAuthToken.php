<?php

namespace Entity\Proxy\__CG__\Entity\Medialibrary;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AuthToken extends \Entity\Medialibrary\AuthToken implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'auth_id', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'purpose', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'category', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'api_key', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'shared_secret', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'is_active', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'expires_at', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'is_superuser', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'created_at', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'AuthSessions');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'auth_id', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'purpose', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'category', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'api_key', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'shared_secret', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'is_active', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'expires_at', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'is_superuser', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'created_at', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'updated_at', '' . "\0" . 'Entity\\Medialibrary\\AuthToken' . "\0" . 'AuthSessions');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AuthToken $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAuthId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthId', array());

        return parent::getAuthId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPurpose($purpose)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPurpose', array($purpose));

        return parent::setPurpose($purpose);
    }

    /**
     * {@inheritDoc}
     */
    public function getPurpose()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurpose', array());

        return parent::getPurpose();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setApiKey($apiKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApiKey', array($apiKey));

        return parent::setApiKey($apiKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiKey', array());

        return parent::getApiKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setSharedSecret($sharedSecret)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSharedSecret', array($sharedSecret));

        return parent::setSharedSecret($sharedSecret);
    }

    /**
     * {@inheritDoc}
     */
    public function getSharedSecret()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSharedSecret', array());

        return parent::getSharedSecret();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', array($isActive));

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', array());

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiresAt($expiresAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiresAt', array($expiresAt));

        return parent::setExpiresAt($expiresAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiresAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiresAt', array());

        return parent::getExpiresAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSuperuser($isSuperuser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSuperuser', array($isSuperuser));

        return parent::setIsSuperuser($isSuperuser);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsSuperuser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsSuperuser', array());

        return parent::getIsSuperuser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addAuthSession(\Entity\Medialibrary\AuthSession $authSession)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAuthSession', array($authSession));

        return parent::addAuthSession($authSession);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuthSession(\Entity\Medialibrary\AuthSession $authSession)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuthSession', array($authSession));

        return parent::removeAuthSession($authSession);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthSessions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthSessions', array());

        return parent::getAuthSessions();
    }

}
