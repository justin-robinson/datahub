<?php

namespace Entity\Proxy\__CG__\Entity\Medialibrary;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BatchUpload extends \Entity\Medialibrary\BatchUpload implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'batch_id', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'pub_id', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'ip_address', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'user_agent', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'is_complete', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'created_by', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'created_at', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'BatchMedia', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'Publication');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'batch_id', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'pub_id', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'ip_address', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'user_agent', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'is_complete', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'created_by', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'created_at', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'BatchMedia', '' . "\0" . 'Entity\\Medialibrary\\BatchUpload' . "\0" . 'Publication');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BatchUpload $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getBatchId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBatchId', array());

        return parent::getBatchId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPubId($pubId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPubId', array($pubId));

        return parent::setPubId($pubId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPubId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPubId', array());

        return parent::getPubId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpAddress($ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpAddress', array($ipAddress));

        return parent::setIpAddress($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpAddress', array());

        return parent::getIpAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserAgent($userAgent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserAgent', array($userAgent));

        return parent::setUserAgent($userAgent);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserAgent', array());

        return parent::getUserAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsComplete($isComplete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsComplete', array($isComplete));

        return parent::setIsComplete($isComplete);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsComplete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsComplete', array());

        return parent::getIsComplete();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addBatchMedia(\Entity\Medialibrary\BatchMedia $batchMedia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBatchMedia', array($batchMedia));

        return parent::addBatchMedia($batchMedia);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBatchMedia(\Entity\Medialibrary\BatchMedia $batchMedia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBatchMedia', array($batchMedia));

        return parent::removeBatchMedia($batchMedia);
    }

    /**
     * {@inheritDoc}
     */
    public function getBatchMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBatchMedia', array());

        return parent::getBatchMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublication(\Entity\Medialibrary\Publication $publication = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublication', array($publication));

        return parent::setPublication($publication);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublication', array());

        return parent::getPublication();
    }

}
