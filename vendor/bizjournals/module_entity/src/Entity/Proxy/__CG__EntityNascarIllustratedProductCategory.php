<?php

namespace Entity\Proxy\__CG__\Entity\NascarIllustrated;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProductCategory extends \Entity\NascarIllustrated\ProductCategory implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'category_id', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'category_name', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'slug', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'ord', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'is_active', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'is_hidden', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'can_group_by_year', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'group_id', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'created_at', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'updated_at', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'Products');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'category_id', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'category_name', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'slug', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'ord', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'is_active', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'is_hidden', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'can_group_by_year', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'group_id', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'created_at', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'updated_at', '' . "\0" . 'Entity\\NascarIllustrated\\ProductCategory' . "\0" . 'Products');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProductCategory $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getCategoryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryId', array());

        return parent::getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryName($categoryName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryName', array($categoryName));

        return parent::setCategoryName($categoryName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryName', array());

        return parent::getCategoryName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrd($ord)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrd', array($ord));

        return parent::setOrd($ord);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrd', array());

        return parent::getOrd();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', array($isActive));

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', array());

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsHidden($isHidden)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsHidden', array($isHidden));

        return parent::setIsHidden($isHidden);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsHidden()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsHidden', array());

        return parent::getIsHidden();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanGroupByYear($canGroupByYear)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanGroupByYear', array($canGroupByYear));

        return parent::setCanGroupByYear($canGroupByYear);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanGroupByYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanGroupByYear', array());

        return parent::getCanGroupByYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupId($groupId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupId', array($groupId));

        return parent::setGroupId($groupId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupId', array());

        return parent::getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\Entity\NascarIllustrated\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', array($product));

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\Entity\NascarIllustrated\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', array($product));

        return parent::removeProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', array());

        return parent::getProducts();
    }

}
