<?php

namespace Entity\Proxy\__CG__\Entity\Bizj;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CtClickTrack extends \Entity\Bizj\CtClickTrack implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'id', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'event_type', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'campaign_id', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'click_id', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'c_time', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'remote_ip', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'uin', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'user_agent', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'dest_url', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'referer');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'id', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'event_type', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'campaign_id', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'click_id', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'c_time', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'remote_ip', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'uin', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'user_agent', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'dest_url', '' . "\0" . 'Entity\\Bizj\\CtClickTrack' . "\0" . 'referer');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CtClickTrack $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventType($eventType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventType', array($eventType));

        return parent::setEventType($eventType);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventType', array());

        return parent::getEventType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaignId($campaignId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaignId', array($campaignId));

        return parent::setCampaignId($campaignId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaignId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaignId', array());

        return parent::getCampaignId();
    }

    /**
     * {@inheritDoc}
     */
    public function setClickId($clickId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClickId', array($clickId));

        return parent::setClickId($clickId);
    }

    /**
     * {@inheritDoc}
     */
    public function getClickId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClickId', array());

        return parent::getClickId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCTime($cTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCTime', array($cTime));

        return parent::setCTime($cTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getCTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCTime', array());

        return parent::getCTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoteIp($remoteIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoteIp', array($remoteIp));

        return parent::setRemoteIp($remoteIp);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoteIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoteIp', array());

        return parent::getRemoteIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setUin($uin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUin', array($uin));

        return parent::setUin($uin);
    }

    /**
     * {@inheritDoc}
     */
    public function getUin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUin', array());

        return parent::getUin();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserAgent($userAgent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserAgent', array($userAgent));

        return parent::setUserAgent($userAgent);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserAgent', array());

        return parent::getUserAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestUrl($destUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestUrl', array($destUrl));

        return parent::setDestUrl($destUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestUrl', array());

        return parent::getDestUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferer($referer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferer', array($referer));

        return parent::setReferer($referer);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferer', array());

        return parent::getReferer();
    }

}
