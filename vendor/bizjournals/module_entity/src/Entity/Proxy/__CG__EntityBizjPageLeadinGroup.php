<?php

namespace Entity\Proxy\__CG__\Entity\Bizj;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PageLeadinGroup extends \Entity\Bizj\PageLeadinGroup implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_id', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'page_id', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_type', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_title', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_class', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_topic', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_teaser', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'placement', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'ord', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_url', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'auto_query', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'LeadinItems', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'Page');
        }

        return array('__isInitialized__', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_id', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'page_id', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_type', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_title', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_class', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_topic', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_teaser', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'placement', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'ord', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'group_url', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'auto_query', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'LeadinItems', '' . "\0" . 'Entity\\Bizj\\PageLeadinGroup' . "\0" . 'Page');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PageLeadinGroup $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getGroupId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupId', array());

        return parent::getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageId($pageId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageId', array($pageId));

        return parent::setPageId($pageId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageId', array());

        return parent::getPageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupType($groupType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupType', array($groupType));

        return parent::setGroupType($groupType);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupType', array());

        return parent::getGroupType();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupTitle($groupTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupTitle', array($groupTitle));

        return parent::setGroupTitle($groupTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupTitle', array());

        return parent::getGroupTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupClass($groupClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupClass', array($groupClass));

        return parent::setGroupClass($groupClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupClass', array());

        return parent::getGroupClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupTopic($groupTopic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupTopic', array($groupTopic));

        return parent::setGroupTopic($groupTopic);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupTopic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupTopic', array());

        return parent::getGroupTopic();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupTeaser($groupTeaser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupTeaser', array($groupTeaser));

        return parent::setGroupTeaser($groupTeaser);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupTeaser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupTeaser', array());

        return parent::getGroupTeaser();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlacement($placement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlacement', array($placement));

        return parent::setPlacement($placement);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlacement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlacement', array());

        return parent::getPlacement();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrd($ord)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrd', array($ord));

        return parent::setOrd($ord);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrd', array());

        return parent::getOrd();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupUrl($groupUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupUrl', array($groupUrl));

        return parent::setGroupUrl($groupUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupUrl', array());

        return parent::getGroupUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoQuery($autoQuery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutoQuery', array($autoQuery));

        return parent::setAutoQuery($autoQuery);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutoQuery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutoQuery', array());

        return parent::getAutoQuery();
    }

    /**
     * {@inheritDoc}
     */
    public function addLeadinItem(\Entity\Bizj\PageLeadinItem $leadinItems)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLeadinItem', array($leadinItems));

        return parent::addLeadinItem($leadinItems);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLeadinItem(\Entity\Bizj\PageLeadinItem $leadinItems)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLeadinItem', array($leadinItems));

        return parent::removeLeadinItem($leadinItems);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeadinItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeadinItems', array());

        return parent::getLeadinItems();
    }

    /**
     * {@inheritDoc}
     */
    public function setPage(\Entity\Bizj\Page $page = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPage', array($page));

        return parent::setPage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getPage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPage', array());

        return parent::getPage();
    }

}
